(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{488:function(o,n,t){"use strict";t.r(n),n.default="float random(float n){\n    return fract(sin(n)*1e4);\n}\n\nfloat noise(float x) {\n    float a = random(floor(x));\n    float b = random(floor(x) + 1.0);\n    float f = fract(x);\n    float u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, floor(sin(iTime * 5.0)) < -.5 ? f : u);\n}\n\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.02, pct, st.y) -\n          smoothstep( pct, pct+0.02, st.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){    \n    vec2 pos = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\n    float y = noise(pos.x * 2.5 + iTime * 5.) * .5;\n    float y2 = noise(pos.x * 2. + iTime * 3.) * .5;\n    float y3 = noise(pos.x * 1.5 + iTime * 1.) * .8;\n\n    float pct = plot(pos, y);\n    float pct2 = plot(pos, y2);\n    float pct3 = plot(pos, y3);\n\n    vec3 color = vec3(1.0);\n    color = (1.0 - pct) * color + pct * vec3(0.6, 0.3, 0.9);\n    color = (1.0 - pct2) * color + pct2 * vec3(0.6, 0.9, 0.3);\n    color = (1.0 - pct3) * color + pct3 * vec3(0.9, 0.6, 0.3);\n\n    fragColor = vec4(color, 1.0);\n}"}}]);